proc float Sum(float $input[])
{
    float $result = 0;

    if (size($input) == 0) {
        print("please input a number");
        return 0;
    }

    for ($i = 0; $i < size($input); $i++)
    {
        $result += $input[$i];
    }     
        return $result;    
}

proc float Difference(float $input[])
{
    float $result = $input[0];

    if (size($input) == 0) {
        print("please input a number");
        return 0;
    }

    for ($i = 1; $i < size($input); $i++)
    {
        $result -= $input[$i];
    } 
    return $result;    
}

proc float Multiplication(float $input[])
{
    float $result = 1;

    if (size($input) == 0) {
        print("please input a number");
        return 0;
    }

    for ($i = 0; $i < size($input); $i++)
    {
        $result *= $input[$i];
    }
    return $result;   
}

proc float Division(float $input[])
{
    float $result = $input[0];

    if (size($input) == 0) {
        print("please input a number");
        return 0;
    }

    for ($i = 1; $i < size($input); $i++)
    {
        if ($input[$i] == 0){
            print("DIVIDE BY ZERO\n");
            $result = 0;
            break;
        }
        $result /= $input[$i];
    } 
    return $result;    
}

proc float Power(float $base, float $power)
{
    float $result = $base;

    for ($i = 1; $i < $power; $i++)
    {
        $result *= $base;
    }

    return $result;   
}

proc float Mean(float $input[])
{
    float $result = 0;

    if (size($input) == 0) {
        print("please input a number");
        return 0;
    }

    for ($i = 0; $i < size($input); $i++)
    {
        $result += $input[$i];
    }

    $result = ($result / size($input));
    return $result;  
}

proc float Median(float $input[])
{
    float $result = 0;

    if (size($input) == 0) {
        print("please input a number");
        return 0;
    }
    
    for ($i = 0; $i < (size($input) - 1); $i++) {
        for ($j = $i + 1; $j < size($input); $j++) {
            if ($input[$i] > $input[$j]) {
                float $temp = $input[$i];
                $input[$i] = $input[$j];
                $input[$j] = $temp;
            }
        }
    }

    if ((size($input) % 2) == 1) {
        // Odd number of elements
        $result = $input[(size($input) / 2)];
        return $result;
    } else {
        // Even number of elements
        $result = ($input[(size($input) / 2) - 1] + $input[(size($input) / 2)]) / 2.0;
        return $result;
    }
}

global proc string Calculator(float $values[], int $operation)
{
    string $resultText;

    switch ($operation){
        case 1:
            $resultText = ("The sum of " + $values[0]);
            if (size($values) < 3){
                $resultText += (" and " + $values[1] + " is " + Sum($values));
                return $resultText;
                break; 
            }

            for ($i = 1; $i < (size($values) - 1); $i++)
            {
                $resultText +=  (", " + $values[$i]);
            }
            $resultText += (" and " + $values[$i] + " is " + Sum($values));

            return $resultText;
            break;

        case 2:
            $resultText = ("The difference of " + $values[0]);
            if (size($values) < 3){
                $resultText += (" and " + $values[1] + " is " + Difference($values));
                return $resultText;
                break; 
            }

            for ($i = 1; $i < (size($values) - 1); $i++)
            {
                $resultText +=  (", " + $values[$i]);
            }
            $resultText += (" and " + $values[$i] + " is " + Difference($values));

            return $resultText;
            break;
        case 3:
            $resultText = ("The multiplication of " + $values[0]);
            if (size($values) < 3){
                $resultText += (" and " + $values[1] + " is " + Multiplication($values));
                return $resultText;
                break; 
            }

            for ($i = 1; $i < (size($values) - 1); $i++)
            {
                $resultText +=  (", " + $values[$i]);
            }
            $resultText += (" and " + $values[$i] + " is " + Multiplication($values));

            return $resultText;
            break;
        case 4:
            $resultText = ("The division of " + $values[0]);
            if (size($values) < 3){
                $resultText += (" and " + $values[1] + " is " + Division($values));
                return $resultText;
                break; 
            }

            for ($i = 1; $i < (size($values) - 1); $i++)
            {
                $resultText +=  (", " + $values[$i]);
            }
            $resultText += (" and " + $values[$i] + " is " + Division($values));

            return $resultText;
            break;
        case 5:
            if (size($values) > 2){
                $resultText = "Please input two numbers";
                return $resultText;
                break;               
            }

            $resultText = ($values[0] + " to the power of " + $values[1] + " is " + Power($values[0], $values[1]));
            return $resultText;
            break;
        case 6:
            $resultText = ("The mean of " + $values[0]);
            if (size($values) < 3){
                $resultText += (" and " + $values[1] + " is " + Mean($values));
                return $resultText;
                break; 
            }

            for ($i = 1; $i < (size($values) - 1); $i++)
            {
                $resultText +=  (", " + $values[$i]);
            }
            $resultText += (" and " + $values[$i] + " is " + Mean($values));

            return $resultText;
            break;
        case 7:
            $resultText = ("The median of " + $values[0]);
            if (size($values) < 3){
                $resultText += (" and " + $values[1] + " is " + Median($values));
                return $resultText;
                break; 
            }

            for ($i = 1; $i < (size($values) - 1); $i++)
            {
                $resultText +=  (", " + $values[$i]);
            }
            $resultText += (" and " + $values[$i] + " is " + Median($values));

            return $resultText;
            break;
    }
}


global proc CalcUI_CMD()
{
    string $valueField = `optionVar -q "cValues"`;
    string $opField = `optionVar -q "cOperationCollection"`;

    string $valueUI = `floatField -q -value $valueField`;
    string $opUI = `radioCollection -q -value $opField`;

    Calculator($valueField, $opField)
}

global proc CalcUI()
{
    string $cWindow = "cWin";

    if (`window -exists $cWindow`){
        deleteUI $cWindow;
    }

    $cWindow = `window -title "Calculator"
                 -widthHeight 300 400
                 -sizeable 1
                 -resizeToFitChildren 1
                 $cWindow`;

    string $mFrame = `frameLayout -parent $cWindow -label "Input numbers below"`;
    optionVar -stringValue "cValues" `floatField -parent $mFrame`;
    optionVar -stringValue "cAddTo" `button -label "Add to operation" -parent $mFrame`;
    optionVar -stringValue "cClear" `button -label "Clear" -parent $mFrame`;
    button -label "Calculate!" -parent $mFrame -command "CalcUI_CMD";

    string $mGrid = `gridLayout -numberOfColumns 4 -cellWidthHeight 100 50 -parent $cWindow`;
    optionVar -stringValue "cOperationCollection" `radioCollection -parent $mGrid`;
    optionVar -stringValue "cOperation1" `radioButton -label "Add"`;
    optionVar -stringValue "cOperation2" `radioButton -label "Subtract"`;
    optionVar -stringValue "cOperation3" `radioButton -label "Multiply"`;
    optionVar -stringValue "cOperation4" `radioButton -label "Divide"`;
    optionVar -stringValue "cOperation5" `radioButton -label "Power"`;
    optionVar -stringValue "cOperation6" `radioButton -label "Mean"`;
    optionVar -stringValue "cOperation7" `radioButton -label "Median"`;
    optionVar -stringValue "cMessage" `textField -editable 0 -height 50 -parent $mFrame`;

    showWindow $cWindow;
}